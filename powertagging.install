<?php

/**
 * @file
 * Install, update and uninstall functions for the PowerTagging module.
 */

/**
 * Implements hook_schema().
 */
function powertagging_schema() {
  $schema['powertagging_entity_extraction_cache'] = array(
    'description' => 'Table that stores field values containing extracted entities.',
    'fields' => array(
      'entity_type' => array(
        'description' => 'The entity type, e.g. "node".',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
      ),
      'bundle' => array(
        'description' => 'The bundle of the entity.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'entity_id' => array(
        'description' => 'The ID of the entity.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'language' => array(
        'description' => 'The language of the entity.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'field_name' => array(
        'description' => 'The name of the field.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'delta' => array(
        'description' => 'The sequence number for this data item, used for multi-value fields.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'html' => array(
        'description' => 'The rendered HTML containing the extracted entities.',
        'type' => 'text',
        'not null' => FALSE,
        'size' => 'big',
        'translatable' => FALSE,
      ),
    ),
    'primary key' => array('entity_type', 'entity_id', 'field_name', 'language', 'delta'),
  );

  return $schema;
}

/**
 * Adds the new data properties settings to all PowerTagging configurations.
 */
function powertagging_update_8101() {

  $configs = \Drupal\powertagging\Entity\PowerTaggingConfig::loadMultiple();
  /** @var \Drupal\powertagging\Entity\PowerTaggingConfig $config */
  foreach ($configs as $config) {
    $settings = $config->getConfig();
    $settings['data_properties'] = ['skos:altLabel', 'skos:hiddenLabel', 'skos:exactMatch'];
    $config->setConfig($settings);
    $config->save();
  }

  return t('PowerTagging configurations updated.');
}

/**
 * Adds a new table for saving html with extracted entities.
 */
function powertagging_update_8102() {
  $schema = powertagging_schema();
  \Drupal::database()->schema()->createTable('powertagging_entity_extraction_cache', $schema['powertagging_entity_extraction_cache']);
}
